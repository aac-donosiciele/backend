// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DonosContext))]
    partial class DonosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Entities.Complaint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TargetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetFirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TargetLastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("SenderId");

                    b.ToTable("Complaints");
                });

            modelBuilder.Entity("Core.Entities.ComplaintLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplaintId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OfficialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OfficialId");

                    b.HasIndex("ComplaintId", "CreatedDate", "OfficialId");

                    b.ToTable("ComplaintsLogs");
                });

            modelBuilder.Entity("Core.Entities.Official", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Officials");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4ea6b4fa-eb64-4364-956c-d959effc0fa5"),
                            Category = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0f5e2321-32d0-43ef-af28-d1492c8d7671"),
                            Category = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pesel")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4ea6b4fa-eb64-4364-956c-d959effc0fa5"),
                            Category = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsVerified = true,
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "a48dbf15d3c2e171b9328005d5727589903c0083b524efba66ea1516231bca85",
                            Pesel = "112345678",
                            Role = 2,
                            Username = "megaAdmin"
                        },
                        new
                        {
                            Id = new Guid("0f5e2321-32d0-43ef-af28-d1492c8d7671"),
                            Category = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsVerified = true,
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "e8e7b468dcb0446072821a7e5ffb21344ac784c3d6a02192f58df2764cd555e6",
                            Pesel = "012345678",
                            Role = 0,
                            Username = "megaAdmin12"
                        },
                        new
                        {
                            Id = new Guid("be54755e-f093-4c7a-a7e5-7c1826ecd11b"),
                            Category = 0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsVerified = true,
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "41455bd85390f866c132887d4ec3771240b21700c1b8de233ddab2d832c20c00",
                            Pesel = "012345690",
                            Role = 1,
                            Username = "megaAdmin123"
                        });
                });

            modelBuilder.Entity("Core.Entities.Complaint", b =>
                {
                    b.HasOne("Core.Entities.User", "Sender")
                        .WithMany("Complaints")
                        .HasForeignKey("SenderId")
                        .IsRequired();

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Core.Entities.ComplaintLog", b =>
                {
                    b.HasOne("Core.Entities.Complaint", "Complaint")
                        .WithMany("ComplaintLogs")
                        .HasForeignKey("ComplaintId")
                        .IsRequired();

                    b.HasOne("Core.Entities.Official", "Official")
                        .WithMany("ComplaintLogs")
                        .HasForeignKey("OfficialId")
                        .IsRequired();

                    b.Navigation("Complaint");

                    b.Navigation("Official");
                });

            modelBuilder.Entity("Core.Entities.Complaint", b =>
                {
                    b.Navigation("ComplaintLogs");
                });

            modelBuilder.Entity("Core.Entities.Official", b =>
                {
                    b.Navigation("ComplaintLogs");
                });

            modelBuilder.Entity("Core.Entities.User", b =>
                {
                    b.Navigation("Complaints");
                });
#pragma warning restore 612, 618
        }
    }
}
